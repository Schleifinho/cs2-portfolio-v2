// <auto-generated />
using System;
using CSPortfolioAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CSPortfolioAPI.Migrations
{
    [DbContext(typeof(CSDbContext))]
    [Migration("20251006171438_AddGetDashboardNumbers")]
    partial class AddGetDashboardNumbers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CSPortfolioAPI.Models.DashBoardNumbers", b =>
                {
                    b.Property<long>("RecentTransactions")
                        .HasColumnType("bigint")
                        .HasColumnName("recenttransactions");

                    b.Property<long>("TotalItems")
                        .HasColumnType("bigint")
                        .HasColumnName("totalitems");

                    b.Property<long>("TotalUniqueItems")
                        .HasColumnType("bigint")
                        .HasColumnName("totaluniqueitems");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("numeric")
                        .HasColumnName("totalvalue");

                    b.ToTable((string)null);

                    b.ToFunction("get_dashboard_numbers");
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.InventoryEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("itemid");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("integer")
                        .HasColumnName("quantityonhand");

                    b.HasKey("Id")
                        .HasName("pk_inventoryentries");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_inventoryentries_itemid");

                    b.ToTable("inventoryentries", (string)null);
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IconUrl")
                        .HasColumnType("text")
                        .HasColumnName("iconurl");

                    b.Property<string>("MarketHashName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("markethashname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("MarketHashName")
                        .IsUnique()
                        .HasDatabaseName("ix_items_markethashname");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.PriceHistory", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("itemid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("ItemId", "TimeStamp")
                        .HasName("pk_pricehistories");

                    b.ToTable("pricehistories", (string)null);
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryEntryId")
                        .HasColumnType("integer")
                        .HasColumnName("inventoryentryid");

                    b.Property<double>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_transactions");

                    b.HasIndex("InventoryEntryId")
                        .HasDatabaseName("ix_transactions_inventoryentryid");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.Views.InventoryEntryView", b =>
                {
                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("currentprice");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("iconurl");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer")
                        .HasColumnName("itemid");

                    b.Property<string>("MarketHashName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("markethashname");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("numeric")
                        .HasColumnName("totalvalue");

                    b.Property<decimal>("Trend")
                        .HasColumnType("numeric")
                        .HasColumnName("trend");

                    b.ToTable((string)null);

                    b.ToView("inventory_entry_view", (string)null);
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.InventoryEntry", b =>
                {
                    b.HasOne("CSPortfolioAPI.Models.Item", "Item")
                        .WithMany("InventoryEntries")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_inventoryentries_items_itemid");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.PriceHistory", b =>
                {
                    b.HasOne("CSPortfolioAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_pricehistories_items_itemid");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.Transaction", b =>
                {
                    b.HasOne("CSPortfolioAPI.Models.InventoryEntry", "InventoryEntry")
                        .WithMany("Transactions")
                        .HasForeignKey("InventoryEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_transactions_inventoryentries_inventoryentryid");

                    b.Navigation("InventoryEntry");
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.InventoryEntry", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CSPortfolioAPI.Models.Item", b =>
                {
                    b.Navigation("InventoryEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
